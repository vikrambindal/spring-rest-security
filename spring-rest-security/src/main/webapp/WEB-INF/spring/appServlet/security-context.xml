<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<import resource="servlet-context.xml"/>

	<!-- NOTE: create-session - false (as its REST Service) -->
    <sec:http disable-url-rewriting="true" entry-point-ref="forbiddenEntryPoint" use-expressions="true" create-session="never">
        <sec:anonymous enabled="false"/>
        <sec:session-management session-fixation-protection="none"/>
        <sec:custom-filter ref="restAuthenticationFilter" position="FORM_LOGIN_FILTER"/>
        <sec:intercept-url pattern="/services/**" access="isFullyAuthenticated()"/>
    </sec:http>

	<!-- Since we are using the REST Service during authentication and not
		 using the traditional approach of form login which spring redirects to after authentication
		 we return 403 resource by default -->
    <bean id="forbiddenEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"/>

	<sec:authentication-manager alias="defaultAuthenticationManager" erase-credentials="true">
        <sec:authentication-provider ref="restUserAuthenticationProvider"/>
    </sec:authentication-manager>
    
    <bean id="restUserAuthenticationProvider" class="demo.vikram.springrest.controller.security.RestUserAuthenticationProvider">
		<property name="passwordEncoder">
			<bean class="demo.vikram.springrest.controller.security.HMacShaPasswordEncoder">
				<constructor-arg value="256"/>
				<constructor-arg value="true"/>
			</bean>
		</property>
	</bean>
	
	<bean id="restAuthenticationFilter" class="demo.vikram.springrest.controller.security.RestAuthenticatonFilter">
        <constructor-arg name="defaultFilterProcessesUrl" value="/service/"/>
        <property name="authenticationManager" ref="defaultAuthenticationManager"/>
        <property name="authenticationSuccessHandler">
            <!-- Upon successful authentication, Spring will attempt to try and move you to another URL -->
            <!-- We have to prevent this because the request for the resource and the authentication all get done in the same request! -->
            <bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
                <property name="redirectStrategy">
                    <bean class="demo.vikram.springrest.controller.security.NoRedirectStrategy"/>
                </property>
            </bean>
        </property>
    </bean>

</beans>
